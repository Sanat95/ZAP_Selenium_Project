<?xml version="1.0" encoding="utf-8"?><!--XML Export of VCG Results for directory: C:\Users\User\Desktop\ZAPSeleniumIntegration. Scanned for Java security issues.--><CodeIssueCollection><CodeIssue><Priority>7</Priority><Severity>Potential Issue</Severity><Title>Public Class Not Declared as Final</Title><Description>The class is not declared as final as per OWASP recommendations. It is considered best practice to make classes final where possible and practical (i.e. It has no classes which inherit from it). Non-Final classes can allow an attacker to extend a class in a malicious manner. Manually inspect the code to determine whether or not it is practical to make this class final.</Description><FileName>C:\Users\User\Desktop\ZAPSeleniumIntegration\src\main\java\com\attra\scan\ScanProgress.java</FileName><Line>9</Line><CodeLine>public class ScanProgress {</CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue><CodeIssue><Priority>7</Priority><Severity>Potential Issue</Severity><Title>Public Class Not Declared as Final</Title><Description>The class is not declared as final as per OWASP recommendations. It is considered best practice to make classes final where possible and practical (i.e. It has no classes which inherit from it). Non-Final classes can allow an attacker to extend a class in a malicious manner. Manually inspect the code to determine whether or not it is practical to make this class final.</Description><FileName>C:\Users\User\Desktop\ZAPSeleniumIntegration\src\main\java\com\attra\scan\browser\BrowserDriverFactory.java</FileName><Line>8</Line><CodeLine>public class BrowserDriverFactory {</CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue><CodeIssue><Priority>7</Priority><Severity>Potential Issue</Severity><Title>Public Class Not Declared as Final</Title><Description>The class is not declared as final as per OWASP recommendations. It is considered best practice to make classes final where possible and practical (i.e. It has no classes which inherit from it). Non-Final classes can allow an attacker to extend a class in a malicious manner. Manually inspect the code to determine whether or not it is practical to make this class final.</Description><FileName>C:\Users\User\Desktop\ZAPSeleniumIntegration\src\main\java\com\attra\scan\test\AllMyTests.java</FileName><Line>9</Line><CodeLine>public class AllMyTests {</CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue><CodeIssue><Priority>4</Priority><Severity>Standard</Severity><Title>java.io.File</Title><Description>This functionality acts as an entry point for external data and the code should be manually checked to ensure the data obtained is correctly validated and/or sanitised. Additionally, carefull checks/sanitisation should be applied in any situation where the user may be able to control or affect the filename.</Description><FileName>C:\Users\User\Desktop\ZAPSeleniumIntegration\src\main\java\com\attra\scan\test\WebSiteNavigation.java</FileName><Line>2</Line><CodeLine>import java.io.File;</CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue><CodeIssue><Priority>4</Priority><Severity>Standard</Severity><Title>FileInputStream</Title><Description>This function acts as an entry point for external data and the code should be manually checked to ensure the data obtained is correctly validated and/or sanitised. Additionally, carefull checks/sanitisation should be applied in any situation where the user may be able to control or affect the filename.</Description><FileName>C:\Users\User\Desktop\ZAPSeleniumIntegration\src\main\java\com\attra\scan\test\WebSiteNavigation.java</FileName><Line>3</Line><CodeLine>import java.io.FileInputStream;</CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue><CodeIssue><Priority>4</Priority><Severity>Standard</Severity><Title>java.io.File</Title><Description>This functionality acts as an entry point for external data and the code should be manually checked to ensure the data obtained is correctly validated and/or sanitised. Additionally, carefull checks/sanitisation should be applied in any situation where the user may be able to control or affect the filename.</Description><FileName>C:\Users\User\Desktop\ZAPSeleniumIntegration\src\main\java\com\attra\scan\test\WebSiteNavigation.java</FileName><Line>3</Line><CodeLine>import java.io.FileInputStream;</CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue><CodeIssue><Priority>7</Priority><Severity>Potential Issue</Severity><Title>Public Class Not Declared as Final</Title><Description>The class is not declared as final as per OWASP recommendations. It is considered best practice to make classes final where possible and practical (i.e. It has no classes which inherit from it). Non-Final classes can allow an attacker to extend a class in a malicious manner. Manually inspect the code to determine whether or not it is practical to make this class final.</Description><FileName>C:\Users\User\Desktop\ZAPSeleniumIntegration\src\main\java\com\attra\scan\test\WebSiteNavigation.java</FileName><Line>11</Line><CodeLine>public class WebSiteNavigation {</CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue><CodeIssue><Priority>4</Priority><Severity>Standard</Severity><Title>FileInputStream</Title><Description>This function acts as an entry point for external data and the code should be manually checked to ensure the data obtained is correctly validated and/or sanitised. Additionally, carefull checks/sanitisation should be applied in any situation where the user may be able to control or affect the filename.</Description><FileName>C:\Users\User\Desktop\ZAPSeleniumIntegration\src\main\java\com\attra\scan\test\WebSiteNavigation.java</FileName><Line>36</Line><CodeLine>		FileInputStream excel = new FileInputStream(file);</CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue><CodeIssue><Priority>6</Priority><Severity>Suspicious Comment</Severity><Title>Comment Indicates Potentially Unfinished Code</Title><Description>The comment includes some wording which indicates that the developer regards it as unfinished or does not trust it to work correctly.</Description><FileName>C:\Users\User\Desktop\ZAPSeleniumIntegration\src\main\java\com\attra\scan\test\WebSiteNavigation.java</FileName><Line>44</Line><CodeLine>TODO: handle exception</CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue><CodeIssue><Priority>4</Priority><Severity>Standard</Severity><Title>FileInputStream</Title><Description>This function acts as an entry point for external data and the code should be manually checked to ensure the data obtained is correctly validated and/or sanitised. Additionally, carefull checks/sanitisation should be applied in any situation where the user may be able to control or affect the filename.</Description><FileName>C:\Users\User\Desktop\ZAPSeleniumIntegration\src\main\java\com\attra\scan\test\WebSiteNavigation.java</FileName><Line>57</Line><CodeLine>		FileInputStream excel = new FileInputStream(file);</CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue><CodeIssue><Priority>4</Priority><Severity>Standard</Severity><Title>FileInputStream</Title><Description>This function acts as an entry point for external data and the code should be manually checked to ensure the data obtained is correctly validated and/or sanitised. Additionally, carefull checks/sanitisation should be applied in any situation where the user may be able to control or affect the filename.</Description><FileName>C:\Users\User\Desktop\ZAPSeleniumIntegration\src\main\java\com\attra\scan\test\WebSiteNavigation.java</FileName><Line>78</Line><CodeLine>		FileInputStream excel = new FileInputStream(file);</CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue><CodeIssue><Priority>4</Priority><Severity>Standard</Severity><Title>java.io.File</Title><Description>This functionality acts as an entry point for external data and the code should be manually checked to ensure the data obtained is correctly validated and/or sanitised. Additionally, carefull checks/sanitisation should be applied in any situation where the user may be able to control or affect the filename.</Description><FileName>C:\Users\User\Desktop\ZAPSeleniumIntegration\src\main\java\com\attra\scan\test\ZapSecurityTest.java</FileName><Line>3</Line><CodeLine>import java.io.File;</CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue><CodeIssue><Priority>4</Priority><Severity>Standard</Severity><Title>java.io.File</Title><Description>This functionality acts as an entry point for external data and the code should be manually checked to ensure the data obtained is correctly validated and/or sanitised. Additionally, carefull checks/sanitisation should be applied in any situation where the user may be able to control or affect the filename.</Description><FileName>C:\Users\User\Desktop\ZAPSeleniumIntegration\src\main\java\com\attra\scan\test\ZapSecurityTest.java</FileName><Line>4</Line><CodeLine>import java.io.FileOutputStream;</CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue><CodeIssue><Priority>4</Priority><Severity>Standard</Severity><Title>java.io.FileOutputStream</Title><Description>This functionality acts as an entry point for external data and the code should be manually checked to ensure the data obtained is correctly validated and/or sanitised. Additionally, carefull checks/sanitisation should be applied in any situation where the user may be able to control or affect the filename.</Description><FileName>C:\Users\User\Desktop\ZAPSeleniumIntegration\src\main\java\com\attra\scan\test\ZapSecurityTest.java</FileName><Line>4</Line><CodeLine>import java.io.FileOutputStream;</CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue><CodeIssue><Priority>7</Priority><Severity>Potential Issue</Severity><Title>Public Class Not Declared as Final</Title><Description>The class is not declared as final as per OWASP recommendations. It is considered best practice to make classes final where possible and practical (i.e. It has no classes which inherit from it). Non-Final classes can allow an attacker to extend a class in a malicious manner. Manually inspect the code to determine whether or not it is practical to make this class final.</Description><FileName>C:\Users\User\Desktop\ZAPSeleniumIntegration\src\main\java\com\attra\scan\test\ZapSecurityTest.java</FileName><Line>21</Line><CodeLine>public class ZapSecurityTest {</CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue><CodeIssue><Priority>5</Priority><Severity>Low</Severity><Title>Operation on Primitive Data Type</Title><Description>The code appears to be carrying out a mathematical operation on a primitive data type. In some circumstances this can result in an overflow and unexpected behaviour. Check the code manually to determine the risk.</Description><FileName>C:\Users\User\Desktop\ZAPSeleniumIntegration\src\main\java\com\attra\scan\test\ZapSecurityTest.java</FileName><Line>45</Line><CodeLine>		proxy.setHttpProxy(ZAP_PROXYHOST + ":" + ZAP_PROXYPORT);</CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue><CodeIssue><Priority>5</Priority><Severity>Low</Severity><Title>Operation on Primitive Data Type</Title><Description>The code appears to be carrying out a mathematical operation on a primitive data type. In some circumstances this can result in an overflow and unexpected behaviour. Check the code manually to determine the risk.</Description><FileName>C:\Users\User\Desktop\ZAPSeleniumIntegration\src\main\java\com\attra\scan\test\ZapSecurityTest.java</FileName><Line>46</Line><CodeLine>		proxy.setSslProxy(ZAP_PROXYHOST + ":" + ZAP_PROXYPORT);</CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue><CodeIssue><Priority>5</Priority><Severity>Low</Severity><Title>Operation on Primitive Data Type</Title><Description>The code appears to be carrying out a mathematical operation on a primitive data type. In some circumstances this can result in an overflow and unexpected behaviour. Check the code manually to determine the risk.</Description><FileName>C:\Users\User\Desktop\ZAPSeleniumIntegration\src\main\java\com\attra\scan\test\ZapSecurityTest.java</FileName><Line>91</Line><CodeLine>			cpBar.jb.setString("Spider Scan Completed  " + progressPercent + "%");</CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue><CodeIssue><Priority>5</Priority><Severity>Low</Severity><Title>Operation on Primitive Data Type</Title><Description>The code appears to be carrying out a mathematical operation on a primitive data type. In some circumstances this can result in an overflow and unexpected behaviour. Check the code manually to determine the risk.</Description><FileName>C:\Users\User\Desktop\ZAPSeleniumIntegration\src\main\java\com\attra\scan\test\ZapSecurityTest.java</FileName><Line>93</Line><CodeLine>			log.info("Spider is " + progressPercent + "% complete.");</CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue><CodeIssue><Priority>5</Priority><Severity>Low</Severity><Title>Operation on Primitive Data Type</Title><Description>The code appears to be carrying out a mathematical operation on a primitive data type. In some circumstances this can result in an overflow and unexpected behaviour. Check the code manually to determine the risk.</Description><FileName>C:\Users\User\Desktop\ZAPSeleniumIntegration\src\main\java\com\attra\scan\test\ZapSecurityTest.java</FileName><Line>118</Line><CodeLine>			cpBar.jb.setString("Active Scan Completed  " + progressPercent + "%");</CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue><CodeIssue><Priority>5</Priority><Severity>Low</Severity><Title>Operation on Primitive Data Type</Title><Description>The code appears to be carrying out a mathematical operation on a primitive data type. In some circumstances this can result in an overflow and unexpected behaviour. Check the code manually to determine the risk.</Description><FileName>C:\Users\User\Desktop\ZAPSeleniumIntegration\src\main\java\com\attra\scan\test\ZapSecurityTest.java</FileName><Line>121</Line><CodeLine>			log.info("Scan is " + progressPercent + "% complete.");</CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue><CodeIssue><Priority>3</Priority><Severity>Medium</Severity><Title>Unsafe Temporary File Allocation</Title><Description>The application appears to create a temporary file with a static, hard-coded name. This causes security issues in the form of a classic race condition (an attacker creates a file with the same name between the application's creation and attempted usage) or a symbolic linbk attack where an attacker creates a symbolic link at the temporary file location.</Description><FileName>C:\Users\User\Desktop\ZAPSeleniumIntegration\src\main\java\com\attra\scan\test\ZapSecurityTest.java</FileName><Line>151</Line><CodeLine>		FileOutputStream fout = new FileOutputStream(new File("F:\\tmp\\myreport_ZAP1.xml"));</CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue><CodeIssue><Priority>3</Priority><Severity>Medium</Severity><Title>Failure To Release Resources In All Cases</Title><Description>There appears to be no 'finally' block to release resources if an exception occurs, potentially resulting in DoS conditions from excessive resource consumption.</Description><FileName>C:\Users\User\Desktop\ZAPSeleniumIntegration\src\main\java\com\attra\scan\test\ZapSecurityTest.java</FileName><Line>151</Line><CodeLine></CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue><CodeIssue><Priority>3</Priority><Severity>Medium</Severity><Title>FileStream Opened Without Exception Handling</Title><Description>There appears to be no 'try' block to safely open the filestream, potentially resulting in server-side exceptions.</Description><FileName>C:\Users\User\Desktop\ZAPSeleniumIntegration\src\main\java\com\attra\scan\test\ZapSecurityTest.java</FileName><Line>151</Line><CodeLine></CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue><CodeIssue><Priority>3</Priority><Severity>Medium</Severity><Title>Failure To Release Resources In All Cases</Title><Description>There appears to be no release of resources in the 'finally' block, potentially resulting in DoS conditions from excessive resource consumption.</Description><FileName>C:\Users\User\Desktop\ZAPSeleniumIntegration\src\main\java\com\attra\scan\test\ZapSecurityTest.java</FileName><Line>151</Line><CodeLine></CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue><CodeIssue><Priority>7</Priority><Severity>Potential Issue</Severity><Title>Public Class Not Declared as Final</Title><Description>The class is not declared as final as per OWASP recommendations. It is considered best practice to make classes final where possible and practical (i.e. It has no classes which inherit from it). Non-Final classes can allow an attacker to extend a class in a malicious manner. Manually inspect the code to determine whether or not it is practical to make this class final.</Description><FileName>C:\Users\User\Desktop\ZAPSeleniumIntegration\src\main\java\com\attra\scan\util\CustomProgressBar.java</FileName><Line>6</Line><CodeLine>public class CustomProgressBar extends JFrame {</CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue><CodeIssue><Priority>4</Priority><Severity>Standard</Severity><Title>Class Contains Public Variable: jb</Title><Description>The class variable may be accessed and modified by other classes without the use of getter/setter methods. It is considered unsafe to have public fields or methods in a class unless required as any method, field, or class that is not private is a potential avenue of attack. It is safer to provide accessor methods to variables in order to limit their accessibility.</Description><FileName>C:\Users\User\Desktop\ZAPSeleniumIntegration\src\main\java\com\attra\scan\util\CustomProgressBar.java</FileName><Line>7</Line><CodeLine>	public JProgressBar jb;</CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue><CodeIssue><Priority>5</Priority><Severity>Low</Severity><Title>Operation on Primitive Data Type</Title><Description>The code appears to be carrying out a mathematical operation on a primitive data type. In some circumstances this can result in an overflow and unexpected behaviour. Check the code manually to determine the risk.</Description><FileName>C:\Users\User\Desktop\ZAPSeleniumIntegration\src\main\java\com\attra\scan\util\CustomProgressBar.java</FileName><Line>9</Line><CodeLine>	private static final long serialVersionUID = -6414386421760615531L;</CodeLine><Checked>False</Checked><CheckColour>LawnGreen</CheckColour></CodeIssue></CodeIssueCollection>